name: Release dotenvify

# This workflow will build and release the dotenvify CLI tool
# It triggers when a tag matching v*.*.* is pushed to the repository
# Note: GoReleaser requires strict semantic versioning (vMAJOR.MINOR.PATCH)
# Tags like v0.1.3.1 are not valid and will cause the release to fail

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write  # Needed to create GitHub releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for GoReleaser to get all tags and history

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          SCOOP_BUCKET_TOKEN: ${{ secrets.SCOOP_BUCKET_TOKEN }}

      - name: Publish to npm
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Publishing version $VERSION to npm"
          
          # Update package.json version
          npm version $VERSION --no-git-tag-version
          
          # Copy binaries from GoReleaser dist
          mkdir -p bin
          find dist -name "dotenvify" -o -name "dotenvify.exe" | while read binary; do
            platform=$(basename $(dirname $binary))
            if [[ $binary == *.exe ]]; then
              cp "$binary" "bin/${platform}.exe"
            else
              cp "$binary" "bin/${platform}"
            fi
            chmod +x "bin/${platform}"* 2>/dev/null || true
          done
          
          # Publish to npm
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm publish --access public || echo "npm publish failed (likely version already exists)"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
